name: Deploy to Amazon ECR

env:
  aws_region: eu-central-1
  ecr_repository: ${{ github.event.repository.name }}
  dockerfile: "Dockerfile"
  ecr_public_alias: "w6x7i9z5"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Upload image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.aws_region }}

      # - name: Install AWS Cli 2.0
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      # - name: Login to ECR
      #   id: ecr
      #   uses: jwalton/gh-ecr-login@v1
      #   with:
      #     access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
      #     secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
      #     region: ${{ env.aws_region }}

      # - name: Login to public ECR
      #   id: login-ecr
      #   env:
      #     REGION: ${{ env.aws_region }}
      #     ALIAS: ${{ env.ecr_public_alias }}
      #     ACCOUNT_ID: ${{ steps.ecr.outputs.account }}
      #   run: |
      #     aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

      - name: Get ECR password
        id: ecr_login
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.aws_region }}
        run: |
          ECR_PASSWORD="$(docker run -i --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_REGION amazon/aws-cli ecr-public get-login-password)"
          echo "::add-mask::$ECR_PASSWORD"
          echo "::set-output name=ecr-login-password::$ECR_PASSWORD"
        # ECR_PASSWORD="$(docker run -i --rm -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_REGION=$AWS_REGION amazon/aws-cli ecr-public get-login-password)"
      
      - name: Login to ECR public
        run: |
          echo ${{ steps.ecr_login.outputs.ecr-login-password }} | docker login public.ecr.aws -u AWS --password-stdin

      - name: public ECR
        env:
          IMAGE_TAG: "${{ github.sha }}"
          ECR_REPOSITORY: ${{ env.ecr_repository }}-pub
          DOCKERFILE: ${{ env.dockerfile }}
          ALIAS: ${{ env.ecr_public_alias }}
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG public.ecr.aws/$ALIAS/$ECR_REPOSITORY:$IMAGE_TAG
          docker push public.ecr.aws/$ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

      # Private ECR part
      # - name: Login to Amazon ECR
      #   id: login_to_ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Private ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login_to_ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ env.ecr_repository }}-pub
      #     IMAGE_TAG: "${{ github.sha }}"
      #     DOCKERFILE: ${{ env.dockerfile }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

          
